name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest


    steps:
      - uses: actions/checkout@v1

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      # - uses: actions/cache@v2
      #   with:
      #     path: ~/backend/node_modules
      #     key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.OS }}-npm-cache-

      - name: Install dependencies
        working-directory: ./backend
        run: npm install

      - name: Run tests
        working-directory: ./backend
        run: npm run test:unit
      

  # backend-unit-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install Node.js
  #       uses: actions/setup-node@v4
      
  #     - run: cd backend && npm i
        
  #     - name: Run tests
  #       run: npm run test:backend:unit

  # frontend-unit-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install Node.js
  #       uses: actions/setup-node@v4
      
  #     - run: cd frontend && npm i
        
  #     - name: Run tests
  #       run: npm run test:frontend:unit

  # e2e-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install Node.js
  #       uses: actions/setup-node@v4
      
  #     - run: npm i

  #     - uses: hoverkraft-tech/compose-action@v1.5.1
  #       with:
  #         compose-file: "./docker-compose.dev.yml"
  #       env:
  #         POSTGRES_USER: "postgres"
  #         POSTGRES_PASSWORD: "postgres"
  #         POSTGRES_DB: "mydb"
  #         DATABASE_URL: "postgresql://postgres:postgres@database:5432/mydb"
      
  #     - name: Run tests
  #       run: npm run test:e2e

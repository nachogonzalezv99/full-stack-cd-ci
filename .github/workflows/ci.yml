name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest


    steps:
      - uses: actions/checkout@v1

      - run: npm run dev
    
      - name: Wait for the environment to get up
        run: |
          while ! docker exec database mysqladmin --user=root --password= --host "127.0.0.1" ping --silent &> /dev/null ; do
              echo "Waiting for database connection..."
              sleep 2
          done

      - run: docker exec backend npm run test

      # - name: Install Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 20
      #     cache: 'npm'
      #     cache-dependency-path: backend/package-lock.json
      

  # backend-unit-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install Node.js
  #       uses: actions/setup-node@v4
      
  #     - run: cd backend && npm i
        
  #     - name: Run tests
  #       run: npm run test:backend:unit

  # frontend-unit-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install Node.js
  #       uses: actions/setup-node@v4
      
  #     - run: cd frontend && npm i
        
  #     - name: Run tests
  #       run: npm run test:frontend:unit

  # e2e-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install Node.js
  #       uses: actions/setup-node@v4
      
  #     - run: npm i

  #     - uses: hoverkraft-tech/compose-action@v1.5.1
  #       with:
  #         compose-file: "./docker-compose.dev.yml"
  #       env:
  #         POSTGRES_USER: "postgres"
  #         POSTGRES_PASSWORD: "postgres"
  #         POSTGRES_DB: "mydb"
  #         DATABASE_URL: "postgresql://postgres:postgres@database:5432/mydb"
      
  #     - name: Run tests
  #       run: npm run test:e2e
